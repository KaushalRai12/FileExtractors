Metadata-Version: 2.4
Name: file-extractor
Version: 1.0.0
Summary: A GUI application for extracting files by type with custom filtering
Home-page: 
Author: File Extractor Team
Author-email: 
Project-URL: Bug Reports, 
Project-URL: Source, 
Keywords: file,extract,gui,tkinter,utility
Classifier: Development Status :: 4 - Beta
Classifier: Intended Audience :: Developers
Classifier: Intended Audience :: End Users/Desktop
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Topic :: Desktop Environment :: File Managers
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Classifier: Topic :: Utilities
Requires-Python: >=3.6
Description-Content-Type: text/markdown
License-File: LICENSE
Dynamic: author
Dynamic: classifier
Dynamic: description
Dynamic: description-content-type
Dynamic: keywords
Dynamic: license-file
Dynamic: project-url
Dynamic: requires-python
Dynamic: summary

# File Extractor - Custom File Types

A powerful GUI application for extracting files by type with custom filtering capabilities. This tool allows you to selectively extract specific file types from directories while preserving folder structure and providing detailed reports.

## ‚ú® Features

- **Custom File Type Selection**: Choose from predefined categories or specify custom extensions
- **Smart File Detection**: Automatically detects and categorizes files by type
- **Folder Structure Preservation**: Maintains relative paths during extraction
- **Text Conversion**: Option to convert all files to .txt format for easy reading
- **Detailed Reporting**: Generates comprehensive folder structure reports
- **Configuration Persistence**: Remembers your settings between sessions
- **Cross-Platform**: Works on Windows, macOS, and Linux
- **No External Dependencies**: Uses only Python standard library modules

## üéØ Supported File Types

### Predefined Categories
- **Python**: `.py`, `.pyw`, `.pyx`, `.pxd`
- **Environment**: `.env`, `.env.local`, `.env.production`, `.env.development`
- **YAML**: `.yml`, `.yaml`
- **JSON**: `.json`, `.jsonc`
- **TypeScript**: `.ts`, `.tsx`
- **JavaScript**: `.js`, `.jsx`, `.mjs`
- **HTML/CSS**: `.html`, `.htm`, `.css`, `.scss`, `.sass`
- **Markdown**: `.md`, `.markdown`
- **Docker**: `Dockerfile`, `.dockerignore`
- **Shell**: `.sh`, `.bash`, `.zsh`, `.fish`
- **Config**: `.ini`, `.cfg`, `.conf`, `.config`
- **XML**: `.xml`, `.xsd`, `.xsl`
- **SQL**: `.sql`, `.db`, `.sqlite`
- **Logs**: `.log`, `.txt`

### Custom Extensions
Add any additional file extensions you need using the custom extensions field.

## üöÄ Installation

### Prerequisites
- Python 3.6 or higher
- No external packages required (uses only standard library)

### Windows Installation

1. **Download and Extract**: Extract the application to your desired location
2. **Run Installer**: Double-click `install_windows.bat`
3. **Follow Prompts**: The installer will:
   - Check Python version
   - Create a virtual environment
   - Install the application
   - Create a desktop shortcut
4. **Launch**: Use the desktop shortcut or run `file-extractor-gui` from command line

### Linux/macOS Installation

1. **Download and Extract**: Extract the application to your desired location
2. **Make Script Executable**: `chmod +x install_unix.sh`
3. **Run Installer**: `./install_unix.sh`
4. **Follow Prompts**: The installer will:
   - Check Python version
   - Create a virtual environment
   - Install the application
   - Create desktop shortcut (Linux)
   - Add shell alias
5. **Launch**: Use the desktop shortcut or run `file-extractor-gui`

### Manual Installation

```bash
# Clone or download the repository
cd FileExtractors

# Create virtual environment
python -m venv venv

# Activate virtual environment
# Windows:
venv\Scripts\activate
# Linux/macOS:
source venv/bin/activate

# Install in development mode
pip install -e .

# Run the application
file-extractor-gui
```

## üìñ Usage

### Basic Workflow

1. **Select Source Directory**: Choose the folder containing files to extract
2. **Select Destination**: Choose where to save extracted files
3. **Choose File Types**: Select which file types to extract
4. **Add Custom Extensions**: Specify any additional extensions if needed
5. **Scan Files**: Click "Scan for Files" to find matching files
6. **Review Results**: Check the list of found files
7. **Extract**: Click "Extract Files" to copy files to destination

### Advanced Options

- **Convert to TXT**: Check this option to convert all files to text format
- **Custom Extensions**: Add comma-separated extensions (e.g., `.csv,.xml,.sql`)
- **Configuration**: Your selections are automatically saved for next use

### Output

The application creates:
- **Extracted Files**: All matching files copied to destination
- **Structure Report**: Detailed report of folder structure and file counts
- **Preserved Paths**: Relative paths maintained for easy reference

## üîß Configuration

Your settings are automatically saved to `~/.file_extractor_config.json`:
- Source and destination directories
- File type selections
- Custom extensions
- Other preferences

## üìÅ File Structure

```
FileExtractors/
‚îú‚îÄ‚îÄ file_extractor.py      # Main application
‚îú‚îÄ‚îÄ setup.py              # Package configuration
‚îú‚îÄ‚îÄ requirements.txt      # Dependencies (none required)
‚îú‚îÄ‚îÄ install_windows.bat   # Windows installer
‚îú‚îÄ‚îÄ install_unix.sh      # Unix/Linux/macOS installer
‚îú‚îÄ‚îÄ README.md            # This file
‚îú‚îÄ‚îÄ LICENSE              # MIT License
‚îî‚îÄ‚îÄ MANIFEST.in          # Package manifest
```

## üé® Screenshots

The application features a clean, intuitive interface with:
- File type selection checkboxes
- Custom extension input
- File preview with type information
- Progress indicators
- Detailed results view

## üêõ Troubleshooting

### Common Issues

1. **Python Not Found**: Ensure Python 3.6+ is installed and in PATH
2. **Permission Errors**: Run installer as administrator (Windows) or with sudo (Linux/macOS)
3. **Virtual Environment Issues**: Delete `venv` folder and reinstall
4. **Shortcut Not Working**: Check that the virtual environment path is correct

### Getting Help

- Check Python version: `python --version`
- Verify virtual environment: `venv\Scripts\activate` (Windows) or `source venv/bin/activate` (Unix)
- Test installation: `file-extractor-gui --help`

## ü§ù Contributing

Contributions are welcome! Please feel free to submit issues, feature requests, or pull requests.

## üìÑ License

This project is licensed under the MIT License - see the [LICENSE](LICENSE) file for details.

## üôè Acknowledgments

- Built with Python's tkinter GUI framework
- Uses only standard library modules for maximum compatibility
- Designed for simplicity and ease of use

---

**File Extractor** - Making file extraction simple and customizable since 2024!
